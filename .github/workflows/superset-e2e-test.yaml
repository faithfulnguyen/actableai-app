name: End-to-end tests
on:
  # Manually triggered
  workflow_dispatch:
  # Trigger the workflow on push or pull request,
  # but only for the dev branch
  schedule:
    - cron:  '0 5 * * *'
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: actableai-dev
  GKE_ZONE: europe-west2-a

jobs:
  build:
    name: Build
    runs-on: docker-hosted
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R runner:runner $GITHUB_WORKSPACE

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          submodules: recursive

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud auth configure-docker europe-west2-docker.pkg.dev

      # Build the Docker image
      - name: Build and Push Ray image
        env:
          IMAGE: actableai/actable-ray
        run: |-
          docker build \
          --tag "europe-west2-docker.pkg.dev/$PROJECT_ID/$IMAGE:$GITHUB_SHA" -f ray.Dockerfile .
          docker push "europe-west2-docker.pkg.dev/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Build and Push Actable image
        env:
          IMAGE: actableai/actable
        run: |
          docker build -t "europe-west2-docker.pkg.dev/$PROJECT_ID/$IMAGE:$GITHUB_SHA" -f Dockerfile --target lean .
          docker push "europe-west2-docker.pkg.dev/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

  deploy:
    name: Deploy
    runs-on: docker-hosted
    needs: build
    env:
      NAMESPACE: test
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R runner:runner $GITHUB_WORKSPACE

      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud auth configure-docker europe-west2-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Setup git-secret
        id: setup-gitsecret
        run: |
          git secret reveal -f

      - name: Setup Helm remote chart
        run: |
          helm plugin install https://github.com/hayorov/helm-gcs.git --version 0.3.20
          helm gcs init gs://actableai-charts
          helm repo add actableai gs://actableai-charts

      - name: Deploy Ray helm chart
        env:
          IMAGE: actableai/actable-ray
        run: |
          helm upgrade --timeout 900s --wait --install ray actableai/ray \
          --namespace ${{ env.NAMESPACE }} \
          --recreate-pods \
          --values deploy/ray/test.yaml \
          --set workerImage="europe-west2-docker.pkg.dev/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      - name: Deploy Superset helm chart
        env:
          IMAGE: actableai/actable
        run: |
          helm dependency update superset
          helm upgrade --timeout 600s --install $HELM_RELEASE_NAME actableai/superset \
          --namespace ${{ env.NAMESPACE }} \
          --values deploy/actableai/test.yaml \
          --set image.repository=europe-west2-docker.pkg.dev/$PROJECT_ID/$IMAGE \
          --set image.tag=$GITHUB_SHA

  e2e-uploadFile-test:
    name: E2E Upload File Testing
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R runner:runner $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runUploadFile
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-analyticDatabaseUnivariateChart-test:
    name: E2E Analytic Univariate Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticDatabaseUnivariateChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-analyticDatabaseMultivariateChart-test:
    name: E2E Analytic Multivariate Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticDatabaseMultivariateChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-analyticDatabaseDataImputationChart-test:
    name: E2E Analytic Data Impitation Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticDatabaseDataImputationChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-runAnalyticClassificationChart-test:
    name: E2E Analytic Classification Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticClassificationChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-runAnalyticRegressionChart-test:
    name: E2E Analytic Regression Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticRegressionChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-runAnalyticSegmentationChart-test:
    name: E2E Analytic Segmentation Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticSegmentationChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-runAnalyticCorrelationalChart-test:
    name: E2E Analytic Correlational Chart
    needs: deploy
    runs-on: docker-hosted
    defaults:
      run:
        working-directory: ./e2e_automation
    container: cypress/browsers:node14.16.0-chrome89-ff86
    steps:
      - uses: actions/checkout@v2
      - name: Install cypress and verify
        run: |
          npm install
          $(npm bin)/cypress verify

      - name: Run Cypress
        run: |
          npm run runAnalyticCorrelationalChart
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run generalReport

      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_automation/cypress/reports/cucumber/report.html

  e2e-runClassificationSelenium-test:
    runs-on: selenium-hosted
    needs: deploy
    defaults:
      run:
        working-directory: ./e2e_selenium
    name: E2E Classification Selenium
    services:
      selenium:
        image: selenium/standalone-firefox
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R ubuntu:ubuntu $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: '94.0'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install selenium
          pip install cloudinary
          pip install behave2cucumber
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: browser-actions/setup-geckodriver@latest
      - name: Run selenium
        run: |
          export PATH=${{ runner.tool_cache }}/geckodriver/0.29.1/x64:$PATH
          npm run runClassificationSelenium
        continue-on-error: false
      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run convertAndGenerateClassification
          npm run generalReport
      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_selenium/reports/cucumber/report.html

  e2e-runCorrelationSelenium-test:
    runs-on: selenium-hosted
    needs: deploy
    defaults:
      run:
        working-directory: ./e2e_selenium
    name: E2E Correlation Selenium
    services:
      selenium:
        image: selenium/standalone-firefox
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R ubuntu:ubuntu $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: '94.0'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install selenium
          pip install cloudinary
          pip install behave2cucumber
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: browser-actions/setup-geckodriver@latest
      - name: Run selenium
        run: |
          export PATH=${{ runner.tool_cache }}/geckodriver/0.29.1/x64:$PATH
          npm run runCorrelationSelenium
        continue-on-error: false
      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run convertAndGenerateCorrelation
          npm run generalReport
      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_selenium/reports/cucumber/report.html

  e2e-runDataImputationSelenium-test:
    runs-on: selenium-hosted
    needs: deploy
    defaults:
      run:
        working-directory: ./e2e_selenium
    name: E2E Data Imputation Selenium
    services:
      selenium:
        image: selenium/standalone-firefox
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R ubuntu:ubuntu $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: '94.0'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install selenium
          pip install cloudinary
          pip install behave2cucumber
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: browser-actions/setup-geckodriver@latest
      - name: Run selenium
        run: |
          export PATH=${{ runner.tool_cache }}/geckodriver/0.29.1/x64:$PATH
          npm run runDataImputationSelenium
        continue-on-error: false
      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run convertAndGenerateDataImputation
          npm run generalReport
      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_selenium/reports/cucumber/report.html

  e2e-runRegressionSelenium-test:
    runs-on: selenium-hosted
    needs: deploy
    defaults:
      run:
        working-directory: ./e2e_selenium
    name: E2E Regression Selenium
    services:
      selenium:
        image: selenium/standalone-firefox
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R ubuntu:ubuntu $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: '94.0'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install selenium
          pip install cloudinary
          pip install behave2cucumber
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: browser-actions/setup-geckodriver@latest
      - name: Run selenium
        run: |
          export PATH=${{ runner.tool_cache }}/geckodriver/0.29.1/x64:$PATH
          npm run runRegressionSelenium
        continue-on-error: false
      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run convertAndGenerateRegression
          npm run generalReport
      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_selenium/reports/cucumber/report.html

  e2e-runSegmentationSelenium-test:
    runs-on: selenium-hosted
    needs: deploy
    defaults:
      run:
        working-directory: ./e2e_selenium
    name: E2E Segmentation Selenium
    services:
      selenium:
        image: selenium/standalone-firefox
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R ubuntu:ubuntu $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: '94.0'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install selenium
          pip install cloudinary
          pip install behave2cucumber
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: browser-actions/setup-geckodriver@latest
      - name: Run selenium
        run: |
          export PATH=${{ runner.tool_cache }}/geckodriver/0.29.1/x64:$PATH
          npm run runSegmentationSelenium
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run convertAndGenerateSegmentation
          npm run generalReport
      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_selenium/reports/cucumber/report.html

  e2e-runTimeseriesSelenium-test:
    runs-on: selenium-hosted
    needs: deploy
    defaults:
      run:
        working-directory: ./e2e_selenium
    name: E2E Timeseries Selenium
    services:
      selenium:
        image: selenium/standalone-firefox
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        run: |
          sudo chown -R ubuntu:ubuntu $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: '94.0'
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install selenium
          pip install cloudinary
          pip install behave2cucumber
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - uses: browser-actions/setup-geckodriver@latest
      - name: Run selenium
        run: |
          export PATH=${{ runner.tool_cache }}/geckodriver/0.29.1/x64:$PATH
          npm run runTimeseriesSelenium
        continue-on-error: false

      - name: Generate HTML report
        if: ${{ failure() }}
        run: |
          npm run convertAndGenerateTimeseries
          npm run generalReport
      - name: Deploy report page to Github Page
        if: ${{ failure() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e_selenium/reports/cucumber/report.html

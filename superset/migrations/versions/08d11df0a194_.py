# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""empty message

Revision ID: 08d11df0a194
Revises: 1a396a8199b5
Create Date: 2021-06-20 14:26:12.939406

"""

# revision identifiers, used by Alembic.
revision = '08d11df0a194'
down_revision = '1a396a8199b5'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_promo_history',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('promo_id', sa.String(length=100), nullable=True),
    sa.Column('subscription_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['billing_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('billing_invoices')
    op.execute("DROP TYPE statusinvoice")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_invoices',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('subscription_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('stripe_transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('SUCCESSFULLY', 'PENDING', 'FAILURE', name='statusinvoice'), autoincrement=False, nullable=False),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['billing_subscriptions.id'], name='billing_invoices_subscription_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], name='billing_invoices_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='billing_invoices_pkey')
    )
    op.drop_table('billing_promo_history')
    # ### end Alembic commands ###
